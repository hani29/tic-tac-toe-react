{"version":3,"sources":["Board.js","App.js","index.js"],"names":["Board","props","handleClick","index","state","winner","newboard","board","huPlayer","setState","player","setTimeout","checkWinner","freshboard","aiAction","aiPlayer","emptyIndexies","fills","_","filter","value","key","push","huPlayerIndexies","winnerIndex","Array","fill","mapIndex","winLines","bind","this","length","a","b","c","availSpot","checkWinlines","opponentIndexes","res","coverIndex","map","intersept","intersection","console","log","j","difference","d","isEmpty","mostSpot","flattenDeep","availtoSpot","uniq","Math","floor","random","e","markColor","Box","box","onClick","style","indexOf","color","className","width","margin","type","reset","Component","App","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486fa8fb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport _ from 'lodash'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            winner: null,\r\n            player: null,\r\n            winnerIndex: null,\r\n            aiPlayer: \"X\",\r\n            huPlayer: \"O\",\r\n            board: Array(9).fill(null),\r\n            mapIndex: [0, 1, 2, 3, 4, 5, 6, 7, 8],\r\n            winLines: [\r\n                [0, 1, 2],\r\n                [3, 4, 5],\r\n                [6, 7, 8],\r\n                [0, 3, 6],\r\n                [1, 4, 7],\r\n                [2, 5, 8],\r\n                [0, 4, 8],\r\n                [2, 4, 6]\r\n            ]\r\n        }\r\n\r\n        this.checkWinner = this.checkWinner.bind(this)\r\n        this.huPlayerIndexies = this.huPlayerIndexies.bind(this)\r\n\r\n    }\r\n\r\n    checkWinner() {\r\n\r\n        for (let index = 0; index < this.state.winLines.length; index++) {\r\n            const [a, b, c] = this.state.winLines[index]\r\n\r\n            if (\r\n                this.state.board[a] === this.state.huPlayer &&\r\n                this.state.board[b] === this.state.huPlayer &&\r\n                this.state.board[c] === this.state.huPlayer\r\n            ) {\r\n                this.setState({\r\n                    winner: this.state.huPlayer,\r\n                    winnerIndex: [a, b, c]\r\n                })\r\n            } else if (\r\n                this.state.board[a] === this.state.aiPlayer &&\r\n                this.state.board[b] === this.state.aiPlayer &&\r\n                this.state.board[c] === this.state.aiPlayer\r\n            ) {\r\n                this.setState({\r\n                    winner: this.state.aiPlayer,\r\n                    winnerIndex: [a, b, c]\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    aiAction() {\r\n        const availSpot = this.emptyIndexies()\r\n        const checkWinlines = this.state.winLines\r\n        const opponentIndexes = this.huPlayerIndexies()\r\n        let res = []\r\n        let coverIndex = null\r\n        checkWinlines.map((value, key) => {\r\n            let intersept = _.intersection(value, opponentIndexes)\r\n            console.log(intersept)\r\n            if (intersept.length == 2) {\r\n                let j = _.difference(value, intersept)\r\n\r\n                if (this.state.board[j[0]] === null) {\r\n                    coverIndex = j[0]\r\n                }\r\n\r\n            }\r\n        })\r\n\r\n        if (coverIndex) {\r\n            return coverIndex\r\n        }\r\n\r\n        checkWinlines.map((value, key) => {\r\n            let d = _.intersection(value, availSpot)\r\n\r\n            if (d && !_.isEmpty(_.difference(value, d))) {\r\n                res.push(d)\r\n            }\r\n        })\r\n\r\n        let mostSpot = _.flattenDeep(res)\r\n        let uniq = _.uniq(mostSpot)\r\n        let availtoSpot = uniq\r\n\r\n        let rand = availtoSpot[Math.floor(Math.random() * availtoSpot.length)]\r\n\r\n        return rand\r\n    }\r\n\r\n    handleClick = index => {\r\n        if (this.state.winner !== null) {\r\n            return\r\n        }\r\n\r\n        let newboard = this.state.board;\r\n\r\n        if (newboard[index] !== null) {\r\n            return\r\n        }\r\n\r\n        newboard[index] = this.state.huPlayer\r\n        this.setState({\r\n            board: newboard,\r\n            player: this.state.huPlayer\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.checkWinner()\r\n\r\n            if (this.state.winner === null) {\r\n                let freshboard = this.state.board;\r\n                let aiIndex = this.aiAction();\r\n\r\n                freshboard[aiIndex] = this.state.aiPlayer\r\n                this.setState({\r\n                    board: freshboard,\r\n                    player: this.state.aiPlayer\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    this.checkWinner()\r\n                }, 800)\r\n            }\r\n\r\n        }, 800);\r\n\r\n    }\r\n\r\n    emptyIndexies = () => {\r\n\r\n        let fills = []\r\n        let iterator = _.filter(this.state.board, function (value, key) {\r\n            if (value === null) {\r\n                fills.push(key)\r\n            }\r\n        })\r\n\r\n        return fills;\r\n    }\r\n\r\n    huPlayerIndexies = () => {\r\n\r\n        let fills = []\r\n        let iterator = _.filter(this.state.board, function (value, key) {\r\n            if (value === 'O') {\r\n                fills.push(key)\r\n            }\r\n        })\r\n\r\n        return fills;\r\n    }\r\n\r\n    reset(e) {\r\n        this.setState({\r\n            winner: null,\r\n            player: null,\r\n            board: Array(9).fill(null),\r\n            winnerIndex: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const markColor = this.state.winner === this.state.huPlayer ? \"#badc58\" : \"#ff7979\"\r\n        const Box = this.state.board.map((box, index) =>\r\n            <div\r\n                key={index}\r\n                onClick={() => this.handleClick(index)}\r\n                style={\r\n                    this.state.winnerIndex && _.indexOf(this.state.winnerIndex, index) > -1 ? { color: markColor } : {}\r\n                }\r\n                className=\"col box\">\r\n                {box}\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"board\" style={{\r\n                width: \"400px\",\r\n                margin: \"10px auto\"\r\n            }}>\r\n                {this.state.winner === this.state.huPlayer && <div style={{\r\n                    color: markColor\r\n                }}>\r\n                    <h2>You Win!</h2>\r\n                </div>}\r\n\r\n                {this.state.winner === this.state.aiPlayer && <div style={{\r\n                    color: markColor\r\n                }}>\r\n                    <h2>You Lose!</h2>\r\n                </div>}\r\n\r\n                {(this.state.winner === null && _.isEmpty(this.emptyIndexies())) && <div style={{\r\n                    color: \"#fff\"\r\n                }}>\r\n                    <h2>Draw!</h2>\r\n                </div>}\r\n\r\n                <div className=\"board-wrapper\">\r\n                    {Box}\r\n                </div>\r\n\r\n                <button className=\"btn\" type=\"button\" onClick={(e) => this.reset(e)}>\r\n                    {this.state.winner || _.isEmpty(this.emptyIndexies()) ? 'New Game' : 'Reset'}\r\n                </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Board from './Board'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\" style={{ textAlign: \"center\" }}>\r\n          <h2>Tic Tac Toe</h2>\r\n          <Board></Board>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}